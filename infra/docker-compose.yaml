version: "3.8"

networks:
  default:
    external: true
    name: analogdb

services:
  # collect traces
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    restart: unless-stopped
    volumes:
      - ./config/otel-collector.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 1888:1888 # pprof extension
      - 13133:13133 # health_check extension
      - 55679:55679 # zpages extension
      - 4317:4317 # OTLP gRPC receiver

  # visualize traces
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"
      - "4317"
      - "4318"
      - "14268"
      - "14250"

  # store traces
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    restart: unless-stopped
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - tempo:/tmp/tempo
      - ./config/tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200" # tempo
      - "4317" # otlp grpc

  # collect logs
  vector:
    image: timberio/vector:latest-alpine
    restart: unless-stopped
    container_name: vector
    ports:
      - 8686:8686 # playground
      - 9598:9598 # prom exporter
    environment:
      - LOG=info
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/vector.toml:/etc/vector/vector.toml:ro

  # since the Loki containers are running as user 10001 and the mounted data volume is owned by root,
  # loki would not have permissions to create the directories.
  # therefore the init container changes permissions of the mounted directory.
  init:
    image: grafana/loki:latest
    container_name: loki-init
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/loki"
    volumes:
      - loki:/loki

  # store logs
  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
      - "7946:7946"
    volumes:
      - ./config/loki.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  # collect and store metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - prometheus:/prometheus
      - ./config/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  # fancy dashboards
  grafana:
    container_name: grafana
    image: grafana/grafana-oss:latest
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana
      - ./config/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/provisioning-datasources.yaml
      - ./config/grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/provisioning-dashboards.yaml
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_LOG_LEVEL=warn
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor

volumes:
  tempo:
  loki:
  prometheus:
  grafana:
